/* Matrix.css VR/AR Extensions - Immersive Interface Components */

/* ========== VR Headset Interface ========== */
.m-vr-interface {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
    perspective: 1000px;
  }
  
  .m-vr-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--m-border);
  }
  
  .m-vr-title {
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 1px;
    color: var(--m-text-bright);
  }
  
  .m-vr-container {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: rgba(0, 10, 0, 0.7);
    border-radius: var(--m-radius);
    overflow: hidden;
    transform-style: preserve-3d;
  }
  
  .m-vr-view {
    position: absolute;
    width: 100%;
    height: 100%;
    display: flex;
    perspective: 1000px;
  }
  
  .m-vr-eye {
    flex: 1;
    position: relative;
    overflow: hidden;
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin: 0.5rem;
  }
  
  .m-vr-eye::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: radial-gradient(
      circle at center,
      transparent 60%,
      rgba(0, 0, 0, 0.7) 100%
    );
    pointer-events: none;
    z-index: 1;
  }
  
  .m-vr-scene {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transform-style: preserve-3d;
    animation: m-vr-camera-move 10s infinite ease-in-out;
  }
  
  @keyframes m-vr-camera-move {
    0%, 100% { transform: translateZ(0) rotateY(0); }
    25% { transform: translateZ(-50px) rotateY(10deg); }
    50% { transform: translateZ(-100px) rotateY(0); }
    75% { transform: translateZ(-50px) rotateY(-10deg); }
  }
  
  .m-vr-floor {
    position: absolute;
    bottom: -50px;
    left: -50%;
    width: 200%;
    height: 200px;
    background-image: 
      linear-gradient(90deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px),
      linear-gradient(0deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px);
    background-size: 40px 40px;
    transform: rotateX(90deg);
    transform-origin: bottom;
    animation: m-vr-floor-move 5s infinite linear;
  }
  
  @keyframes m-vr-floor-move {
    0% { background-position: 0 0; }
    100% { background-position: 40px 40px; }
  }
  
  .m-vr-object {
    position: absolute;
    transform-style: preserve-3d;
    transform: translate(-50%, -50%) translateZ(var(--z-distance, 0));
  }
  
  .m-vr-cube {
    width: 50px;
    height: 50px;
    position: relative;
    transform-style: preserve-3d;
    animation: m-vr-cube-rotate 10s infinite linear;
  }
  
  @keyframes m-vr-cube-rotate {
    0% { transform: rotateX(0) rotateY(0); }
    100% { transform: rotateX(360deg) rotateY(360deg); }
  }
  
  .m-vr-cube-face {
    position: absolute;
    width: 50px;
    height: 50px;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-text);
    display: flex;
    align-items: center;
    justify-content: center;
    font-family: monospace;
    color: var(--m-text);
  }
  
  .m-vr-cube-face.front {
    transform: translateZ(25px);
  }
  
  .m-vr-cube-face.back {
    transform: translateZ(-25px) rotateY(180deg);
  }
  
  .m-vr-cube-face.left {
    transform: translateX(-25px) rotateY(-90deg);
  }
  
  .m-vr-cube-face.right {
    transform: translateX(25px) rotateY(90deg);
  }
  
  .m-vr-cube-face.top {
    transform: translateY(-25px) rotateX(90deg);
  }
  
  .m-vr-cube-face.bottom {
    transform: translateY(25px) rotateX(-90deg);
  }
  
  .m-vr-data-panel {
    position: absolute;
    width: 200px;
    height: 100px;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    padding: 0.5rem;
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
    transform: translateZ(-200px);
    animation: m-vr-panel-float 5s infinite ease-in-out;
  }
  
  @keyframes m-vr-panel-float {
    0%, 100% { transform: translateZ(-200px) translateY(0); }
    50% { transform: translateZ(-200px) translateY(-10px); }
  }
  
  .m-vr-controls {
    display: flex;
    justify-content: space-around;
    margin-top: 1rem;
  }
  
  .m-vr-button {
    width: 40px;
    height: 40px;
    background-color: var(--m-secondary);
    border: 1px solid var(--m-border);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--m-text);
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s;
  }
  
  .m-vr-button:hover {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 10px var(--m-glow);
  }
  
  .m-vr-joystick {
    position: relative;
    width: 80px;
    height: 80px;
    background-color: rgba(0, 20, 0, 0.5);
    border: 1px solid var(--m-border);
    border-radius: 50%;
  }
  
  .m-vr-stick {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 30px;
    height: 30px;
    background-color: var(--m-text-dim);
    border: 1px solid var(--m-border);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    cursor: move;
    transition: all 0.1s;
  }
  
  .m-vr-stick:hover {
    background-color: var(--m-text-bright);
    box-shadow: 0 0 10px var(--m-glow);
  }
  
  /* ========== AR Overlay Interface ========== */
  .m-ar-interface {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-ar-view {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: #222;
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20"><rect width="20" height="20" fill="%23333"/></svg>');
    background-size: 20px 20px;
    border-radius: var(--m-radius);
    overflow: hidden;
  }
  
  .m-ar-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }
  
  .m-ar-hud {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 120px;
    padding: 0.5rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    color: var(--m-text);
    font-family: monospace;
    font-size: 0.8rem;
  }
  
  .m-ar-hud-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.25rem;
  }
  
  .m-ar-hud-label {
    color: var(--m-text-dim);
  }
  
  .m-ar-hud-value {
    color: var(--m-text-bright);
  }
  
  .m-ar-reticle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 40px;
    height: 40px;
    transform: translate(-50%, -50%);
    pointer-events: none;
  }
  
  .m-ar-reticle::before,
  .m-ar-reticle::after {
    content: "";
    position: absolute;
    background-color: var(--m-text);
    opacity: 0.7;
  }
  
  .m-ar-reticle::before {
    top: 50%;
    left: 0;
    width: 100%;
    height: 1px;
    transform: translateY(-50%);
  }
  
  .m-ar-reticle::after {
    top: 0;
    left: 50%;
    width: 1px;
    height: 100%;
    transform: translateX(-50%);
  }
  
  .m-ar-reticle-circle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    border: 1px solid var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    opacity: 0.7;
    animation: m-reticle-pulse 2s infinite;
  }
  
  @keyframes m-reticle-pulse {
    0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.7; }
    50% { transform: translate(-50%, -50%) scale(1.2); opacity: 0.5; }
  }
  
  .m-ar-marker {
    position: absolute;
    width: 30px;
    height: 30px;
    transform: translate(-50%, -50%);
  }
  
  .m-ar-marker::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 1px solid var(--m-text);
    border-radius: 3px;
    opacity: 0.7;
  }
  
  .m-ar-marker-label {
    position: absolute;
    top: -20px;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: 3px;
    padding: 2px 5px;
    font-family: monospace;
    font-size: 0.7rem;
    color: var(--m-text);
    white-space: nowrap;
  }
  
  .m-ar-data-box {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    max-width: 200px;
    padding: 0.5rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
    animation: m-ar-box-appear 0.5s forwards;
  }
  
  @keyframes m-ar-box-appear {
    from { opacity: 0; transform: translateY(20px); }
    to { opacity: 1; transform: translateY(0); }
  }
  
  .m-ar-scan-line {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background-color: var(--m-text);
    opacity: 0.5;
    box-shadow: 0 0 10px var(--m-glow);
    animation: m-ar-scan 3s infinite linear;
  }
  
  @keyframes m-ar-scan {
    0% { top: 0; }
    100% { top: 100%; }
  }
  
  .m-ar-notification {
    position: absolute;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    padding: 0.5rem 1rem;
    font-family: monospace;
    color: var(--m-text);
    animation: m-ar-notification 3s forwards;
  }
  
  @keyframes m-ar-notification {
    0% { opacity: 0; transform: translateX(-50%) translateY(-20px); }
    10%, 90% { opacity: 1; transform: translateX(-50%) translateY(0); }
    100% { opacity: 0; transform: translateX(-50%) translateY(-20px); }
  }
  
  /* ========== Holographic Interface ========== */
  .m-holographic {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
    perspective: 1000px;
  }
  
  .m-holo-container {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
    transform-style: preserve-3d;
  }
  
  .m-holo-projection {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-style: preserve-3d;
    transform: translate(-50%, -50%) rotateX(20deg);
    animation: m-holo-rotate 20s linear infinite;
  }
  
  @keyframes m-holo-rotate {
    0% { transform: translate(-50%, -50%) rotateX(20deg) rotateY(0); }
    100% { transform: translate(-50%, -50%) rotateX(20deg) rotateY(360deg); }
  }
  
  .m-holo-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 200px;
    height: 200px;
    border: 1px solid var(--m-text);
    border-radius: 50%;
    opacity: 0.3;
    transform-style: preserve-3d;
  }
  
  .m-holo-layer:nth-child(1) {
    transform: translateZ(-50px);
  }
  
  .m-holo-layer:nth-child(2) {
    transform: translateZ(-25px);
  }
  
  .m-holo-layer:nth-child(3) {
    transform: translateZ(0);
  }
  
  .m-holo-layer:nth-child(4) {
    transform: translateZ(25px);
  }
  
  .m-holo-layer:nth-child(5) {
    transform: translateZ(50px);
  }
  
  .m-holo-element {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--m-text);
    border-radius: 50%;
    box-shadow: 0 0 5px var(--m-glow);
    transform: translate(-50%, -50%);
    animation: m-holo-pulse 2s infinite alternate;
  }
  
  @keyframes m-holo-pulse {
    0% { opacity: 0.5; transform: translate(-50%, -50%) scale(1); }
    100% { opacity: 1; transform: translate(-50%, -50%) scale(1.2); }
  }
  
  .m-holo-connection {
    position: absolute;
    height: 1px;
    background-color: var(--m-text);
    transform-origin: left center;
    opacity: 0.3;
  }
  
  .m-holo-controls {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    display: flex;
    gap: 0.5rem;
  }
  
  .m-holo-control {
    width: 30px;
    height: 30px;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--m-text);
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.3s;
  }
  
  .m-holo-control:hover {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-holo-info {
    position: absolute;
    top: 1rem;
    right: 1rem;
    width: 150px;
    padding: 0.5rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
  }
  
  .m-holo-info-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.25rem;
  }
  
  .m-holo-label {
    color: var(--m-text-dim);
  }
  
  .m-holo-value {
    color: var(--m-text-bright);
  }
  
  /* ========== 3D Environment Mapping ========== */
  .m-environment-map {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-map-container {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
    perspective: 1000px;
  }
  
  .m-map-grid {
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: 
      linear-gradient(90deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px),
      linear-gradient(0deg, rgba(0, 255, 65, 0.1) 1px, transparent 1px);
    background-size: 20px 20px;
    transform-origin: center;
    animation: m-map-rotate 20s linear infinite;
  }
  
  @keyframes m-map-rotate {
    0% { transform: rotateX(60deg) rotateZ(0); }
    100% { transform: rotateX(60deg) rotateZ(360deg); }
  }
  
  .m-map-object {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-map-wall {
    position: absolute;
    width: 100px;
    height: 50px;
    background-color: rgba(0, 30, 0, 0.5);
    border: 1px solid var(--m-border);
    transform-origin: bottom center;
    transform: translate(-50%, -50%) rotateX(90deg);
  }
  
  .m-map-scan {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200px;
    height: 200px;
    border: 1px solid var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%) rotateX(90deg);
    opacity: 0.3;
    pointer-events: none;
    animation: m-scan-expand 3s infinite;
  }
  
  @keyframes m-scan-expand {
    0% { width: 0; height: 0; opacity: 0.8; }
    100% { width: 400px; height: 400px; opacity: 0; }
  }
  
  .m-map-controls {
    position: absolute;
    top: 1rem;
    right: 1rem;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .m-map-control {
    width: 30px;
    height: 30px;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--m-text);
    font-size: 0.8rem;
    cursor: pointer;
    transition: all 0.3s;
  }
  
  .m-map-control:hover {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-map-info {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    padding: 0.5rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
    max-width: 200px;
  }
  
  /* ========== Gesture Recognition Interface ========== */
  .m-gesture-interface {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-gesture-container {
    position: relative;
    width: 100%;
    height: 300px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .m-hand-visualization {
    position: relative;
    width: 200px;
    height: 200px;
  }
  
  .m-hand-joint {
    position: absolute;
    width: 8px;
    height: 8px;
    background-color: var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-hand-connection {
    position: absolute;
    height: 2px;
    background-color: var(--m-text-dim);
    transform-origin: left center;
  }
  
  .m-gesture-trail {
    position: absolute;
    width: 5px;
    height: 5px;
    background-color: var(--m-text-bright);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    opacity: 0.7;
    pointer-events: none;
    box-shadow: 0 0 5px var(--m-glow);
    animation: m-trail-fade 1s forwards;
  }
  
  @keyframes m-trail-fade {
    0% { opacity: 0.7; }
    100% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
  }
  
  .m-gesture-recognition {
    position: absolute;
    top: 1rem;
    right: 1rem;
    padding: 0.5rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
  }
  
  .m-gesture-command {
    position: absolute;
    bottom: 1rem;
    left: 1rem;
    padding: 0.5rem 1rem;
    background-color: rgba(0, 30, 0, 0.7);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 1rem;
    color: var(--m-text-bright);
    animation: m-command-appear 1s forwards;
  }
  
  @keyframes m-command-appear {
    0% { opacity: 0; transform: translateY(20px); }
    100% { opacity: 1; transform: translateY(0); }
  }
  
  /* ========== Voice Control Interface ========== */
  .m-voice-interface {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-voice-visualizer {
    width: 100%;
    height: 100px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    padding: 10px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 2px;
    margin-bottom: 1rem;
  }
  
  .m-voice-bar {
    flex: 1;
    background-color: var(--m-text);
    height: 5%;
    border-radius: 2px;
    animation: m-voice-pulse 1s infinite;
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  @keyframes m-voice-pulse {
    0%, 100% { height: var(--height, 20%); }
    50% { height: var(--height-alt, 80%); }
  }
  
  .m-voice-bar:nth-child(1) { animation-delay: 0s; --height: 20%; --height-alt: 60%; }
  .m-voice-bar:nth-child(2) { animation-delay: 0.1s; --height: 30%; --height-alt: 40%; }
  .m-voice-bar:nth-child(3) { animation-delay: 0.2s; --height: 40%; --height-alt: 70%; }
  .m-voice-bar:nth-child(4) { animation-delay: 0.3s; --height: 60%; --height-alt: 30%; }
  .m-voice-bar:nth-child(5) { animation-delay: 0.4s; --height: 70%; --height-alt: 90%; }
  .m-voice-bar:nth-child(6) { animation-delay: 0.5s; --height: 50%; --height-alt: 20%; }
  .m-voice-bar:nth-child(7) { animation-delay: 0.6s; --height: 30%; --height-alt: 50%; }
  .m-voice-bar:nth-child(8) { animation-delay: 0.7s; --height: 80%; --height-alt: 40%; }
  .m-voice-bar:nth-child(9) { animation-delay: 0.8s; --height: 20%; --height-alt: 60%; }
  .m-voice-bar:nth-child(10) { animation-delay: 0.9s; --height: 40%; --height-alt: 80%; }
  
  .m-voice-command {
    width: 100%;
    padding: 0.75rem;
    background-color: rgba(0, 20, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    color: var(--m-text);
    margin-bottom: 1rem;
    position: relative;
  }
  
  .m-voice-command::after {
    content: "";
    position: absolute;
    right: 10px;
    top: 50%;
    width: 10px;
    height: 10px;
    background-color: var(--m-text);
    border-radius: 50%;
    transform: translateY(-50%);
    animation: m-mic-pulse 1s infinite;
  }
  
  @keyframes m-mic-pulse {
    0%, 100% { opacity: 1; }
    50% { opacity: 0.5; }
  }
  
  .m-voice-response {
    width: 100%;
    min-height: 100px;
    padding: 0.75rem;
    background-color: rgba(0, 30, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    color: var(--m-text-bright);
    position: relative;
  }
  
  .m-voice-typing {
    display: inline-flex;
    align-items: center;
    gap: 5px;
  }
  
  .m-voice-dot {
    width: 6px;
    height: 6px;
    background-color: var(--m-text);
    border-radius: 50%;
    animation: m-voice-dot-pulse 1.5s infinite;
  }
  
  .m-voice-dot:nth-child(2) {
    animation-delay: 0.2s;
  }
  
  .m-voice-dot:nth-child(3) {
    animation-delay: 0.4s;
  }
  
  @keyframes m-voice-dot-pulse {
    0%, 100% { opacity: 0.5; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.2); }
  }
  
  /* ========== Spatial Audio Interface ========== */
  .m-spatial-audio {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-audio-visualizer {
    position: relative;
    width: 100%;
    height: 200px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
    perspective: 1000px;
  }
  
  .m-audio-map {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transform: rotateX(60deg);
  }
  
  .m-listener {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    background-color: var(--m-text-bright);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 10px var(--m-glow);
    z-index: 2;
  }
  
  .m-audio-source {
    position: absolute;
    width: 15px;
    height: 15px;
    background-color: var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    box-shadow: 0 0 5px var(--m-glow);
    z-index: 2;
  }
  
  .m-audio-wave {
    position: absolute;
    border: 1px solid var(--m-text);
    border-radius: 50%;
    opacity: 0;
    transform: translate(-50%, -50%);
    animation: m-audio-wave 2s linear infinite;
  }
  
  @keyframes m-audio-wave {
    0% { 
      width: 0;
      height: 0;
      opacity: 0.7;
    }
    100% { 
      width: 100px;
      height: 100px;
      opacity: 0;
    }
  }
  
  .m-audio-controls {
    display: flex;
    justify-content: space-between;
    margin-top: 1rem;
  }
  
  .m-audio-control {
    padding: 0.5rem;
    background-color: rgba(0, 20, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.8rem;
    color: var(--m-text);
    cursor: pointer;
    transition: all 0.3s;
  }
  
  .m-audio-control:hover {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-volume-slider {
    width: 100%;
    height: 30px;
    padding: 0 10px;
    margin-top: 1rem;
    position: relative;
  }
  
  .m-volume-track {
    position: absolute;
    top: 50%;
    left: 10px;
    right: 10px;
    height: 4px;
    background-color: rgba(0, 30, 0, 0.5);
    border-radius: 2px;
    transform: translateY(-50%);
  }
  
  .m-volume-fill {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 60%;
    background-color: var(--m-text);
    border-radius: 2px;
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-volume-handle {
    position: absolute;
    top: 50%;
    left: 60%;
    width: 16px;
    height: 16px;
    background-color: var(--m-text-bright);
    border: 1px solid var(--m-border);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    cursor: pointer;
  }
  
  .m-volume-handle:hover {
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  /* ========== Eye Tracking Interface ========== */
  .m-eye-tracking {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-eye-display {
    position: relative;
    width: 100%;
    height: 200px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
  }
  
  .m-eye-target {
    position: absolute;
    width: 20px;
    height: 20px;
    transform: translate(-50%, -50%);
    z-index: 2;
  }
  
  .m-eye-target::before,
  .m-eye-target::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    border: 1px solid var(--m-text);
    border-radius: 50%;
    transform: translate(-50%, -50%);
  }
  
  .m-eye-target::before {
    width: 20px;
    height: 20px;
    animation: m-target-pulse 2s infinite alternate;
  }
  
  .m-eye-target::after {
    width: 10px;
    height: 10px;
    background-color: rgba(0, 255, 65, 0.3);
  }
  
  @keyframes m-target-pulse {
    0% { transform: translate(-50%, -50%) scale(1); }
    100% { transform: translate(-50%, -50%) scale(1.2); }
  }
  
  .m-eye-path {
    position: absolute;
    width: 2px;
    height: 2px;
    background-color: var(--m-text-dim);
    border-radius: 50%;
    opacity: 0.5;
    animation: m-path-fade 3s forwards;
  }
  
  @keyframes m-path-fade {
    0% { opacity: 0.5; }
    100% { opacity: 0; }
  }
  
  .m-gaze-heat {
    position: absolute;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: radial-gradient(
      circle at center,
      rgba(0, 255, 65, 0.5) 0%,
      rgba(0, 255, 65, 0.2) 50%,
      transparent 100%
    );
    transform: translate(-50%, -50%);
    mix-blend-mode: screen;
    opacity: 0.7;
    pointer-events: none;
  }
  
  .m-eye-metrics {
    display: flex;
    justify-content: space-between;
    margin-top: 1rem;
  }
  
  .m-eye-metric {
    flex: 1;
    padding: 0.5rem;
    background-color: rgba(0, 20, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    text-align: center;
    margin: 0 0.5rem;
  }
  
  .m-eye-metric-value {
    font-family: monospace;
    font-size: 1.2rem;
    color: var(--m-text-bright);
    margin-bottom: 0.25rem;
  }
  
  .m-eye-metric-label {
    font-size: 0.8rem;
    color: var(--m-text-dim);
  }
  
  /* ========== Haptic Feedback Visualization ========== */
  .m-haptic-feedback {
    position: relative;
    padding: 1.5rem;
    background-color: var(--m-panel);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    margin-bottom: 1.5rem;
  }
  
  .m-haptic-container {
    position: relative;
    width: 100%;
    height: 200px;
    background-color: rgba(0, 10, 0, 0.5);
    border-radius: var(--m-radius);
    overflow: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .m-haptic-hand {
    position: relative;
    width: 150px;
    height: 200px;
  }
  
  .m-haptic-finger {
    position: absolute;
    width: 20px;
    height: 100px;
    background-color: rgba(0, 30, 0, 0.5);
    border: 1px solid var(--m-border);
    border-radius: 10px;
    transform-origin: bottom center;
  }
  
  .m-haptic-finger:nth-child(1) {
    left: 10px;
    height: 80px;
    transform: rotate(-5deg);
  }
  
  .m-haptic-finger:nth-child(2) {
    left: 35px;
    height: 90px;
    transform: rotate(-2deg);
  }
  
  .m-haptic-finger:nth-child(3) {
    left: 60px;
    height: 100px;
  }
  
  .m-haptic-finger:nth-child(4) {
    left: 85px;
    height: 90px;
    transform: rotate(2deg);
  }
  
  .m-haptic-finger:nth-child(5) {
    left: 110px;
    height: 70px;
    transform: rotate(5deg);
  }
  
  .m-haptic-pulse {
    position: absolute;
    width: 20px;
    height: 20px;
    background: radial-gradient(
      circle at center,
      rgba(0, 255, 65, 0.7) 0%,
      transparent 100%
    );
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: m-haptic-pulse 1s infinite;
  }
  
  @keyframes m-haptic-pulse {
    0%, 100% { transform: translate(-50%, -50%) scale(1); opacity: 0.7; }
    50% { transform: translate(-50%, -50%) scale(1.5); opacity: 0.3; }
  }
  
  .m-haptic-controls {
    display: flex;
    justify-content: space-around;
    margin-top: 1rem;
  }
  
  .m-haptic-control {
    padding: 0.5rem 1rem;
    background-color: rgba(0, 20, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    color: var(--m-text);
    cursor: pointer;
    transition: all 0.3s;
  }
  
  .m-haptic-control:hover {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-haptic-control.active {
    background-color: var(--m-text-dim);
    color: var(--m-text-bright);
    box-shadow: 0 0 5px var(--m-glow);
  }
  
  .m-haptic-feedback-display {
    margin-top: 1rem;
    padding: 0.5rem;
    background-color: rgba(0, 20, 0, 0.3);
    border: 1px solid var(--m-border);
    border-radius: var(--m-radius);
    font-family: monospace;
    font-size: 0.9rem;
    color: var(--m-text);
    min-height: 3em;
  }